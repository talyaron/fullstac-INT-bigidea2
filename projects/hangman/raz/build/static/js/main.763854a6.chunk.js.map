{"version":3,"sources":["firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DB","firestore","App","useState","gameId","setGameId","showCreateGame","setShowCreateGame","className","id","onClick","randomId","Math","floor","random","collection","add","toString","then","game","console","log","catch","e","error","onSubmit","preventDefault","target","children","gameid","value","userId","slice","sessionStorage","setItem","where","limit","get","gamesDB","forEach","gameDB","data","players","undefined","includes","push","doc","update","type","name","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAiBAA,IAASC,cAbc,CACtBC,OAAQ,0CACRC,WAAY,0BACZC,YAAa,iCACbC,UAAW,UACXC,cAAe,sBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOT,IAAMC,EAAKV,IAASW,YCqDZC,MApEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAE+BF,oBAAS,GAFxC,mBAENG,EAFM,KAEUC,EAFV,KAsDb,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQC,GAAG,SAASC,QApDxB,WACE,IAAIC,EAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAmB,GAClDT,EAAUM,GACVX,EAAGe,WAAW,SAASC,IAAI,CAAEZ,OAAQO,EAASM,aAC3CC,MAAK,SAACC,GAAWC,QAAQC,IAAIF,EAAKV,OAClCa,OAAM,SAAAC,GAAOH,QAAQI,MAAMD,MAC9BhB,GAAkB,IA8C4BC,UAAWF,EAAiB,GAAK,SAA7E,yCAGA,oBAAGG,GAAG,UAAN,sBAA0BL,EAA1B,OACA,uBAAMqB,SA/CV,SAAkBF,GAChBA,EAAEG,iBAEF,IAAItB,EAASmB,EAAEI,OAAOC,SAASC,OAAOC,MACtCV,QAAQC,IAAIjB,GAEZ,IAAI2B,EAqDCnB,KAAKE,SAASG,SAAS,IAAIe,MAAM,GApDtCC,eAAeC,QAAQ,SAAUH,GAAQI,MAAM,SAAS,KAAM/B,EAAOa,YACpEmB,MAAM,GACNC,MACDrC,EAAGe,WAAW,SACdG,MAAK,SAAAoB,GAEHA,EAAQC,SAAQ,SAAAC,GACdpB,QAAQC,IAAImB,EAAOC,QADG,IAEjBC,EAAWF,EAAOC,OAAlBC,aACUC,IAAZD,IACDA,EAAQ,GACRA,EAAU,CAACX,IAGTW,EAAQE,SAASb,IACnBW,EAAQG,KAAKd,GAGfX,QAAQC,IAAIqB,GACZ1C,EAAGe,WAAW,SAAS+B,IAAIN,EAAO/B,IAAIsC,OAAO,CAACL,YAC7CxB,MAAK,WAAKE,QAAQC,IAAI,gBAAiBU,EAAQ,iBAAkBS,EAAO/B,OACxEa,OAAM,SAAAC,GACLH,QAAQI,MAAMD,YAKnBD,OAAM,SAAAC,GACLH,QAAQI,MAAMD,OAYd,UACE,uBAAOyB,KAAK,OAAOC,KAAK,SAASC,YAAY,sBAC7C,wBAAQF,KAAK,SAAb,yBClER,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.763854a6.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\n\n\nconst firebaseConfig = {\n apiKey: \"AIzaSyCTV1FMjg-X7xeqCSDwnhm2kSkOLGTvBbE\",\n authDomain: \"raz-fb1.firebaseapp.com\",\n databaseURL: \"https://raz-fb1.firebaseio.com\",\n projectId: \"raz-fb1\",\n storageBucket: \"raz-fb1.appspot.com\",\n messagingSenderId: \"870975017248\",\n appId: \"1:870975017248:web:cabb31e02f8c19d1890745\",\n measurementId: \"G-KF9D4DLN2L\"\n \n\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const DB = firebase.firestore();","import './App.css';\nimport { DB } from './firebaseConfig';\nimport { useState } from 'react';\n\nfunction App() {\n  const [gameId, setGameId] = useState('');\n  const [showCreateGame, setShowCreateGame] = useState(true);\n\n  function handleNewGame() {\n    let randomId = Math.floor(Math.random() * 10000 + 1);\n    setGameId(randomId);\n    DB.collection('games').add({ gameId: randomId.toString() })\n      .then((game) => { console.log(game.id) })\n      .catch(e => { console.error(e) })\n    setShowCreateGame(false)\n  }\n\n  function joinGame(e) {\n    e.preventDefault();\n\n    let gameId = e.target.children.gameid.value\n    console.log(gameId)\n\n    let userId = createUid();\n    sessionStorage.setItem('userId', userId).where('gameId','==', gameId.toString())\n    .limit(1)\n    .get()\n    DB.collection('games')\n   .then(gamesDB=>{\n    \n      gamesDB.forEach(gameDB=>{\n        console.log(gameDB.data())\n        let {players} = gameDB.data();\n        if(players === undefined){\n          players={};\n          players = [userId]\n        } \n\n        if(!players.includes(userId)){\n          players.push(userId)\n        }\n\n        console.log(players)\n        DB.collection('games').doc(gameDB.id).update({players})\n        .then(()=>{console.log('stored player', userId, 'in game number', gameDB.id)})\n        .catch(e=>{\n          console.error(e)\n        })\n      })\n      \n    })\n    .catch(e=>{\n      console.error(e)\n    })\n\n  }\n\n\n  return (\n    <div className=\"App\">\n      <button id=\"submit\" onClick={handleNewGame} className={showCreateGame ? '' : 'hidden'}>\n        Generate Game Id and Submit\n      </button>\n      <p id=\"gameId>\"> Game ID:{gameId} </p>\n      <form onSubmit={joinGame} >\n        <input type='text' name='gameid' placeholder='Enter game number' />\n        <button type='submit'>Join</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n\n\nfunction createUid() {\n  return Math.random().toString(16).slice(2)\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}