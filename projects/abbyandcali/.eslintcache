[{"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/index.js":"1","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/App.js":"2","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/reportWebVitals.js":"3","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/FirebaseConfig.js":"4","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Add/AddDoc.js":"5","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Select/SelectDoc.js":"6"},{"size":500,"mtime":1607594880501,"results":"7","hashOfConfig":"8"},{"size":2173,"mtime":1607594880499,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607594880501,"results":"10","hashOfConfig":"8"},{"size":440,"mtime":1607594880500,"results":"11","hashOfConfig":"8"},{"size":4212,"mtime":1607596930997,"results":"12","hashOfConfig":"8"},{"size":2661,"mtime":1607594880500,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1hp1m0i",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/index.js",[],["29","30"],"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/App.js",["31"],"import './App.css';\nimport AddDoc from './Components/Add/AddDoc'\nimport SelectDoc from './Components/Select/SelectDoc'\nimport {DB} from './Components/FirebaseConfig'\n\n\n//import ListDoc from './Components/List/ListDoc'\n\n//import SendDoc from './Components/Send/SendDoc'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link, \n} from \"react-router-dom\";\n\n\nfunction App() {\n  let mainScreen = document.getElementById(\"mainScreen\")\n  //mainScreen.style.display = \"none\"\n\n  //joining the game and clearing the screen \n  function handleJoin(e) {\n    e.preventDefault();\n    let userId = getUserUID();\n    console.log(\"userId: \" + userId)\n\n    let button = document.getElementById('joinBtn')\n    button.remove()\n    let header = document.getElementById(\"appName\")\n    header.remove()\n    mainScreen = document.getElementById(\"mainScreen\")\n    mainScreen.style.display = \"block\"\n  }\n\n  //making userID and putting it in local storage \n  const uid = function () {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n  function getUserUID() {\n    let userUID = localStorage.getItem('userUID');\n    console.log(\"userUID: \" + userUID);\n    if (userUID === null) {\n      userUID = uid();\n      //create a uid\n      localStorage.setItem('userUID', userUID);\n    }\n    return userUID;\n  }\n\n\n\n\n  return (\n     <div id=\"app\">\n       <h1 id=\"appName\">EmoshApp</h1>\n       <input type=\"submit\" value=\"join\" onClick={handleJoin} id=\"joinBtn\"/>\n      \n\n\n    <div id=\"mainScreen\" style={{display:\"none\"}}><Router>\n      <div>\n        <nav>\n          <div><Link to=\"/AddDoc\">Add</Link></div>\n          <div><Link to=\"/SelectDoc\">Select</Link></div>\n          <div><Link to=\"/ListDoc\">List</Link></div>\n          <div><Link to=\"/SendDoc\">Send</Link></div>\n       \n        </nav>\n\n  <Switch>\n    <Route path=\"/AddDoc\">\n      <h2>Add</h2>\n      <AddDoc/>\n    </Route>\n    <Route path=\"/SelectDoc\">\n    <h2>Select</h2>\n    <SelectDoc/>\n    </Route>\n    <Route path=\"/ListDoc\">\n    <h2>List</h2>\n    </Route>\n    <Route path=\"/SendDoc\">\n    <h2>Send</h2>\n    </Route>\n  </Switch>\n      </div >\n    </Router >\n\n       </div>\n       </div>\n  );\n}\n\nexport default App;\n","/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/reportWebVitals.js",[],"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/FirebaseConfig.js",[],"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Add/AddDoc.js",["32"],"/Users/talyaron/Documents/gitHub/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Select/SelectDoc.js",["33","34","35","36"],"import './SelectDoc.css';\nimport { useState, useEffect } from 'react';\nimport { DB } from '../FirebaseConfig'\n\nfunction SelectDoc() {\n    const [emojisArray, setEmotions] = useState([]);\n    //event listener for each item (1 --> 10) to get the id of what is clicked\n    function Add(number) {\n        console.log(number)\n        let element = document.getElementById('box' + number)\n        console.log(element)\n        //element.style.backgroundColor = \"rgb(81, 186, 186);\"\n    }\n    document.getElementById('emojiDisplay')\n    //DB //for each emojiURL - add <img>emoji with class name and do format there\n    \n\n    /*useEffect(()=> {\n        DB.collection('emotions').onSnapshot(emojisArrayDB => {\n            let emojisArray = []\n            emojisArrayDB.forEach(emojisArrayDB.data())\n            console.log(emojisArrayDB.data())\n            emojisArray.push(emojisArrayDB.data())\n            console.log(\"array: \"+ emojisArray)\n        })\n        setEmotions(emojisArray)\n\n    })\n}, [])*/\n    \n    return (\n        <div id=\"selectDoc\">\n            <h4 id='rateFeelingsHeader'>Rate your feelings</h4>\n            <div id=\"wrapperButtonNumbers\">\n                <input type=\"button\" value=\"1\" className=\"item\" id=\"box1\" onClick={() => Add(1)} />\n                <input type=\"button\" value=\"2\" className=\"item\" id=\"box2\" onClick={() => Add(2)} />\n                <input type=\"button\" value=\"3\" className=\"item\" id=\"box3\" onClick={() => Add(3)} />\n                <input type=\"button\" value=\"4\" className=\"item\" id=\"box4\" onClick={() => Add(4)} />\n                <input type=\"button\" value=\"5\" className=\"item\" id=\"box5\" onClick={() => Add(5)} />\n                <input type=\"button\" value=\"6\" className=\"item\" id=\"box6\" onClick={() => Add(6)} />\n                <input type=\"button\" value=\"7\" className=\"item\" id=\"box7\" onClick={() => Add(7)} />\n                <input type=\"button\" value=\"8\" className=\"item\" id=\"box8\" onClick={() => Add(8)} />\n                <input type=\"button\" value=\"9\" className=\"item\" id=\"box9\" onClick={() => Add(9)} />\n                <input type=\"button\" value=\"10\" className=\"item\" id=\"box10\" onClick={() => Add(10)} />\n            </div>\n            <h4 id=\"emojisHeader\">Emojis</h4>\n            <div id=\"emojiDisplay\"></div>\n            {\n                    emojisArray.map((emoji, index) => {\n                        return <img src={emoji} key={index} className=\"emojiImage\" />\n                    })\n                }\n\n            <h4 id=\"sentenceHeader\">Sentences</h4>\n            <div id=\"sentenceDisplay\"></div>\n\n            <div id=\"selectScreenReminder\"></div>\n        </div>\n\n\n\n    );\n\n}\n\n\nexport default SelectDoc;\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":4,"column":9,"nodeType":"43","messageId":"44","endLine":4,"endColumn":11},{"ruleId":"41","severity":1,"message":"45","line":7,"column":21,"nodeType":"43","messageId":"44","endLine":7,"endColumn":31},{"ruleId":"41","severity":1,"message":"46","line":2,"column":20,"nodeType":"43","messageId":"44","endLine":2,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":12},{"ruleId":"41","severity":1,"message":"47","line":6,"column":25,"nodeType":"43","messageId":"44","endLine":6,"endColumn":36},{"ruleId":"48","severity":1,"message":"49","line":50,"column":32,"nodeType":"50","endLine":50,"endColumn":86},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'DB' is defined but never used.","Identifier","unusedVar","'setFeeling' is assigned a value but never used.","'useEffect' is defined but never used.","'setEmotions' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]