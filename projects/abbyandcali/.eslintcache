[{"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/index.js":"1","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/App.js":"2","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/reportWebVitals.js":"3","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Add/AddDoc.js":"4","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/List/ListDoc.js":"5","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Select/SelectDoc.js":"6","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Send/SendDoc.js":"7","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/FirebaseConfig.js":"8"},{"size":500,"mtime":1607254830663,"results":"9","hashOfConfig":"10"},{"size":2548,"mtime":1607712375579,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607254830664,"results":"12","hashOfConfig":"10"},{"size":4024,"mtime":1607599271333,"results":"13","hashOfConfig":"10"},{"size":1145,"mtime":1607712407008,"results":"14","hashOfConfig":"10"},{"size":5045,"mtime":1607630065997,"results":"15","hashOfConfig":"10"},{"size":884,"mtime":1607712731541,"results":"16","hashOfConfig":"10"},{"size":440,"mtime":1607349928110,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16r629",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/index.js",[],["36","37"],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/App.js",[],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/reportWebVitals.js",[],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Add/AddDoc.js",[],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/List/ListDoc.js",["38","39","40"],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Select/SelectDoc.js",["41"],"import './SelectDoc.css';\nimport { useState, useEffect } from 'react';\nimport { DB } from '../FirebaseConfig'\n\nimport {\n    BrowserRouter as Router,\n    Link,\n} from \"react-router-dom\";\n\nlet clicksNumber = 0\n//let clicksEmoji = 0\n//let clicksMessage = 0\nfunction SelectDoc() {\n    //event listener for each item (1 --> 10) to get the id of what is clicked\n    let selectionObject = {\n        feeling: '',\n        emoji: '',\n        sentence: ''\n    }\n    const [feeling, setFeeling] = useState(1)\n    function Add(number) {\n        setFeeling(number)\n        console.log('feeling: ' + feeling)\n        selectionObject.feeling = feeling\n        if (clicksNumber < 1) {\n            document.getElementById(\"box\" + number).style.backgroundColor = \"orange\";\n            clicksNumber++\n            console.log(clicksNumber)\n        } else {\n            document.querySelectorAll('.item').forEach(item => {\n                item.style.backgroundColor = \"rgb(51, 146, 146)\"})\n            document.getElementById(\"box\" + number).style.backgroundColor = \"orange\";\n            \n        }\n    }\n    document.getElementById('emojiDisplay')\n\n    const [emojis, setEmojis] = useState([])\n    const [sentences, setSentences] = useState([])\n    useEffect(() => {\n        DB.collection('emotions').onSnapshot(emotionsDB => {\n            const emojisTemp = [], sentencesTemp = [];\n            emotionsDB.forEach(emotionDB => {\n                if (emotionDB.data().type === 'emoji') {\n                    emojisTemp.push(emotionDB.data())\n                }\n                if (emotionDB.data().type === 'sentence') {\n                    sentencesTemp.push(emotionDB.data())\n                }\n            })\n            console.log(emojisTemp)\n            setEmojis(emojisTemp);\n            setSentences(sentencesTemp)\n        })\n    }, [])\n\n\n    const [emojiURL, setEmojiURL] = useState('https://i.pinimg.com/originals/29/3b/84/293b84f3561f0f895b54554ff195ea1a.png')\n    function handleEmojiClick(link) {\n        console.log(\"link: \" + link)\n        setEmojiURL(link)\n        selectionObject.emoji = emojiURL\n    }\n    const [message, setMessage] = useState(\"I'm happy\")\n    function handleSentenceClick(sentence) {\n        console.log(sentence)\n        setMessage(sentence)\n        selectionObject.sentence = message\n        console.log(selectionObject)\n    }\n    function handleSelectionSubmit() {\n        DB.collection('emotions').doc('selection').update({ feeling: feeling, emojiURL: emojiURL, message: message })\n        //DB.collection('emotions').doc('selection').set({selectionObject})\n    }\n\n\n    /*useEffect(()=> {\n        DB.collection('emotions').onSnapshot(emojisArrayDB => {\n            let emojisArray = []\n            emojisArrayDB.forEach(emojisArrayDB.data())\n            console.log(emojisArrayDB.data())\n            emojisArray.push(emojisArrayDB.data())\n            console.log(\"array: \"+ emojisArray)\n        })\n        setEmotions(emojisArray)\n\n    })\n}, [])*/\n\n    return (\n        <div id=\"selectDoc\">\n            <h4 id='rateFeelingsHeader'>Rate your feelings</h4>\n            <div id=\"wrapperButtonNumbers\">\n                <input type=\"button\" value=\"1\" className=\"item\" id=\"box1\" onClick={() => Add(1)} />\n                <input type=\"button\" value=\"2\" className=\"item\" id=\"box2\" onClick={() => Add(2)} />\n                <input type=\"button\" value=\"3\" className=\"item\" id=\"box3\" onClick={() => Add(3)} />\n                <input type=\"button\" value=\"4\" className=\"item\" id=\"box4\" onClick={() => Add(4)} />\n                <input type=\"button\" value=\"5\" className=\"item\" id=\"box5\" onClick={() => Add(5)} />\n                <input type=\"button\" value=\"6\" className=\"item\" id=\"box6\" onClick={() => Add(6)} />\n                <input type=\"button\" value=\"7\" className=\"item\" id=\"box7\" onClick={() => Add(7)} />\n                <input type=\"button\" value=\"8\" className=\"item\" id=\"box8\" onClick={() => Add(8)} />\n                <input type=\"button\" value=\"9\" className=\"item\" id=\"box9\" onClick={() => Add(9)} />\n                <input type=\"button\" value=\"10\" className=\"item\" id=\"box10\" onClick={() => Add(10)} />\n            </div>\n            <h4 id=\"emojisHeader\">Emojis</h4>\n            <div id=\"emojisDisplay\">\n                {emojis.map((emoji, index) => {\n                    return (<img src={emoji.text} key={index} className=\"emojiImage\" alt='emoji' onClick={() => handleEmojiClick(`${emoji.text}`)} />)\n                })\n                }\n            </div>\n            <h4 id=\"sentenceHeader\">Sentences</h4>\n            <div id=\"sentencesDisplay\"></div>\n            {\n                sentences.map((sentence, index) => {\n                    return (<p key={index} className=\"sentence\" onClick={() => handleSentenceClick(`${sentence.text}`)}>{sentence.text}</p>)\n                })\n            }\n            <div><Link to=\"/ListDoc\" onClick={handleSelectionSubmit} id=\"linkClick\">click here to finalize your selection</Link></div>\n            <div id=\"listImport\"></div>\n\n        </div>\n\n\n\n    );\n\n}\n\n\nexport default SelectDoc;\n","/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/Send/SendDoc.js",["42","43","44"],"/Users/abbymiller/Documents/github/fullstac-INT-bigidea2/projects/abbyandcali/src/Components/FirebaseConfig.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":5,"column":22,"nodeType":"51","messageId":"52","endLine":5,"endColumn":28},{"ruleId":"53","severity":1,"message":"54","line":28,"column":8,"nodeType":"55","endLine":28,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":35,"column":13,"nodeType":"59","endLine":35,"endColumn":52},{"ruleId":"49","severity":1,"message":"50","line":6,"column":22,"nodeType":"51","messageId":"52","endLine":6,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":5,"column":22,"nodeType":"51","messageId":"52","endLine":5,"endColumn":28},{"ruleId":"53","severity":1,"message":"60","line":22,"column":8,"nodeType":"55","endLine":22,"endColumn":10,"suggestions":"61"},{"ruleId":"57","severity":1,"message":"58","line":26,"column":13,"nodeType":"59","endLine":26,"endColumn":52},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emojiURL', 'feeling', and 'message'. Either include them or remove the dependency array.","ArrayExpression",["64"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'emojiURL' and 'message'. Either include them or remove the dependency array.",["65"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [emojiURL, feeling, message]",{"range":"70","text":"71"},"Update the dependencies array to be: [emojiURL, message]",{"range":"72","text":"73"},[731,733],"[emojiURL, feeling, message]",[595,597],"[emojiURL, message]"]